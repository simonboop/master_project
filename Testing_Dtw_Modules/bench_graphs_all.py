#script to make the overall path graphs between amplicon squiggle and ref squiggle
import numpy as np
#time
from datetime import datetime
#graph making
import matplotlib.pyplot as plt
import matplotlib.cm as cm



#make amplicon graphs
amplicon = np.loadtxt("./Amp1F.txt")
reference = np.loadtxt("./RefF.txt")
ampliconarray = range(1, len(amplicon)+1)
ampliconarray = np.asarray(ampliconarray)
referencearray = range(1,len(reference)+1)
referencearray = np.asarray(referencearray)


#make graph
print(len(amplicon))
print(len(reference))
print(len(ampliconarray))
print(len(referencearray))


fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.86, 0.75])
ax.set_ylabel("Mean Current picoamps (pA)")
ax.set_xlabel("Events")
ax.set_title("Foward Amplicon 1 Squiggle")
ax.plot(ampliconarray,amplicon,"b")
plt.show()
plt.close()

fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.86, 0.75])
ax.set_ylabel("Mean Currents picoamps (pA)")
ax.set_xlabel("Events")
ax.set_title("Foward Reference Squiggle")
ax.plot(referencearray,reference,"b")
plt.show()
plt.close()



#load in ampicon 1 results
mlpyquery = np.loadtxt("./pathsall/1_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/1_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/1_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/1_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/1_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/1_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/1_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/1_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/1_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/1_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/1_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/1_ref_dtw.txt")


#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp1F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp1")
plt.close()
#out put accuracy
print(mlpysubref[0])


#load in ampicon 2 results
mlpyquery = np.loadtxt("./pathsall/2_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/2_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/2_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/2_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/2_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/2_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/2_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/2_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/2_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/2_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/2_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/2_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp2F__By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp2")
plt.close()


#load in ampicon 3 results
mlpyquery = np.loadtxt("./pathsall/3_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/3_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/3_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/3_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/3_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/3_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/3_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/3_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/3_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/3_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/3_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/3_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp3F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp3")
plt.close()

#load in ampicon 4 results
mlpyquery = np.loadtxt("./pathsall/4_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/4_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/4_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/4_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/4_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/4_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/4_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/4_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/4_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/4_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/4_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/4_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp4F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp4")
plt.close()

#load in ampicon 5 results
mlpyquery = np.loadtxt("./pathsall/5_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/5_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/5_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/5_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/5_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/5_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/5_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/5_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/5_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/5_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/5_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/5_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp5F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp5")
plt.close()

#load in ampicon 6 results
mlpyquery = np.loadtxt("./pathsall/6_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/6_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/6_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/6_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/6_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/6_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/6_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/6_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/6_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/6_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/6_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/6_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp6F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp6")
plt.close()

#load in ampicon 7 results
mlpyquery = np.loadtxt("./pathsall/7_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/7_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/7_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/7_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/7_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/7_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/7_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/7_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/7_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/7_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/7_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/7_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp7F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp7")
plt.close()

#load in ampicon 8 results
mlpyquery = np.loadtxt("./pathsall/8_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/8_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/8_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/8_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/8_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/8_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/8_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/8_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/8_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/8_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/8_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/8_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp8F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp8")
plt.close()

#load in ampicon 9 results
mlpyquery = np.loadtxt("./pathsall/9_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/9_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/9_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/9_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/9_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/9_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/9_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/9_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/9_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/9_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/9_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/9_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp9F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp9")
plt.close()

#load in ampicon 10 results
mlpyquery = np.loadtxt("./pathsall/10_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/10_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/10_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/10_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/10_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/10_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/10_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/10_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/10_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/10_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/10_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/10_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp10F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp10")
plt.close()

#load in ampicon 11 results
mlpyquery = np.loadtxt("./pathsall/11_query_mlpy.txt")
mlpyref = np.loadtxt("./pathsall/11_ref_mlpy.txt")
mlpysubquery = np.loadtxt("./pathsall/11_query_mlpysub.txt")
mlpysubref = np.loadtxt("./pathsall/11_ref_mlpysub.txt")
ftwquery = np.loadtxt("./pathsall/11_query_ftw.txt")
ftwref = np.loadtxt("./pathsall/11_ref_ftw.txt")
pydtwquery = np.loadtxt("./pathsall/11_query_pydtw.txt")
pydtwref = np.loadtxt("./pathsall/11_ref_pydtw.txt")
cdtwquery = np.loadtxt("./pathsall/11_query_cdtw.txt")
cdtwref = np.loadtxt("./pathsall/11_ref_cdtw.txt")
dtwquery = np.loadtxt("./pathsall/11_query_dtw.txt")
dtwref = np.loadtxt("./pathsall/11_ref_dtw.txt")

#make graph
fig = plt.figure()
ax = fig.add_axes([0.11, 0.11, 0.6, 0.75])
ax.set_ylabel("FRef_Squiggle_Trace(events)")
ax.set_xlabel("Query_Squiggle_Trace(events)")
ax.set_title("DTW_Paths_Amp11F_By_Different_Modules")
ax.plot(mlpyquery,mlpyref,"r",label='mlpy')
ax.plot(mlpysubquery,mlpysubref,"b",label='mlpysub')
ax.plot(ftwquery,ftwref,"g",label='ftw')
ax.plot(pydtwquery,pydtwref,"r",label='pydtw')
ax.plot(cdtwquery,cdtwref,"y",label='cdtw')
ax.plot(dtwquery,dtwref,"r",label='dtw')
ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
plt.savefig("PathsAmp11")
plt.close()

